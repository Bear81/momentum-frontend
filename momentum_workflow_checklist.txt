# Momentum Workflow Checklist

1. Control Tower (Planning & Tracking)

---

- Choose next card from the Project board (Todo → In Progress).
- Add or update:
  • Acceptance Criteria (clear bullet list of done conditions)
  • Tasks (step-by-step actions)
  • Learning Outcome / Criteria Ref (from assessment)
- Convert card → GitHub Issue (linked to correct repo)
- Assign milestone (e.g. M2 CRUD+Auth, M3 Search+UX) and labels (type:feat, priority:must, status:ready)

2. Frontend Build Chat (Implementation)

---

- Paste card details (title + AC + tasks) into the chat.
- Ask: “Generate code for this issue.”
- Receive:
  • Code files & structure changes
  • Run commands (npm install, npm run dev, etc.)
  • Testing notes and PR message
- Apply code in VS Code and verify it builds and runs cleanly.

3. Local Development (Testing)

---

- Create a feature branch
  git checkout -b feature/<short-name>
- Run project locally
  npm run dev
- Verify:
  • No console errors or lint warnings
  • All Acceptance Criteria met
  • UI behaves correctly (Auth, CRUD, etc.)
  • API calls return correct data

4. Commit & Push

---

- Stage and commit
  git add .
  git commit -m "feat(<area>): <short description>"
  git push origin feature/<short-name>
- Open a Pull Request
  • Include 'Closes #<issue-number>' in the PR description
  • Add screenshots or short demo gif
  • Self-check all AC before requesting merge

5. Merge & Track

---

- Merge PR → main/dev branch
- Verify automatic Project update (issue moved to Done)
- Update Control Tower card with:
  • Link to PR (Evidence column)
  • Notes on testing results or screenshots
- Mark milestone progress if relevant

6. Deployment (when applicable)

---

- Build and deploy to Heroku (manual or CLI)
- Add frontend domain to backend CORS settings
- Smoke-test Auth and CRUD live
- Record deployment steps and verification in README

7. Documentation & QA

---

- Update README with:
  • Features list
  • Pages/routes
  • Manual testing results
  • Deployment instructions
- Capture screenshots for evidence
- Review open cards → move next Todo → repeat cycle

---

Control Tower = what and why
Frontend Chat = how (the code)
Local workflow = execution and verification

Momentum Frontend Build Chat – Kickoff Prompt

This chat is for building the Momentum React frontend step-by-step.
The backend (Django + DRF + JWT) is already deployed.
The goal is to deliver a clean, functional, assessment-ready frontend that meets all LO4 CRUD and Auth requirements and is deployed on Heroku.

Start by scaffolding Vite + React Router + base layout.
Each subsequent step will complete one feature card at a time (Auth → CRUD → Search → UX).

Output should include:

Full working code (no placeholders)

File structure updates

Commands for setup, run, and test

Git commit and PR message suggestions

Keep explanations brief and focused on the build.

Momentum Control Tower / Project Management Chat – Kickoff Prompt

This chat manages the Project Momentum Control Tower (GitHub Project board).
Its purpose is to track progress, link issues and PRs, and maintain documentation alignment with assessment criteria.

Focus:

Update card statuses, milestones, and MoSCoW priorities

Convert cards to issues and link to frontend/backend repos

Add Acceptance Criteria and Tasks per card

Summarize progress for sprint reviews and documentation

Keep all technical code discussion in the Frontend Build Chat; this space remains purely for project tracking, documentation, and QA alignment.
